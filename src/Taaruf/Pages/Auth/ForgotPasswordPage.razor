@using Taaruf.Data
@using Taaruf.Tools
@inject IJSRuntime IJS
@page "/forgot-password"
@inject IToastService toastService

<!-- Page Content
        ================================================== -->
<div class="container">
    <div class="row">
        <div class="col-xl-5 offset-xl-3">
            <div class="login-register-page">
                <!-- Welcome Text -->
                <div class="welcome-text">
                    <h3>Forget Password</h3>
                    <span>Please type your email or phone below</span>
                </div>

                <!-- Form -->
                <div id="login-form">
                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-mail-outline"></i>
                        <input type="text" class="input-text with-border" @bind="Email" name="emailaddress" id="emailaddress" placeholder="Email Address" required />
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-outline-lock"></i>
                        <input type="tel" class="input-text with-border" @bind="Phone" name="phone" id="phone" placeholder="Phone" required />
                    </div>
                   
                </div>

                <!-- Button -->
                <button class="button full-width button-sliding-icon ripple-effect margin-top-10"  @onclick="KirimPassword" type="button" form="login-form">Kirim Password <i class="icon-material-outline-arrow-right-alt"></i></button>

            </div>

        </div>
    </div>
</div>


<!-- Spacer -->
<div class="margin-top-70"></div>
<!-- Spacer / End-->


@code {
    public string Phone { get; set; }
    public string Email { get; set; }
    async Task Tutup()
    {
        await IJS.InvokeVoidAsync("CloseModal", "forgetModal");
    }
    async Task KirimPassword()
    {
        bool IsSuccess = false;
        UserProfileService svc = new UserProfileService();
        var enc = new Encryption();
        string Error = string.Empty;

        if (string.IsNullOrEmpty(Email) && string.IsNullOrEmpty(Phone))
        {
            toastService.ShowError("Email atau no hp harus di isi.");
            return;
        }
        if (!string.IsNullOrEmpty(Email))
        {
            var item = svc.GetItemByEmail(Email);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);
                await MailService.PostmarkSendEmail("Portal-UB - Forget Password", $"Password Anda adalah {pass}", Email, false);
                toastService.ShowSuccess("Info password sudah di kirim ke email Anda");
                IsSuccess = true;
            }
            else
            {
                toastService.ShowError("Email tidak terdaftar.");
            }
        }

        if (!string.IsNullOrEmpty(Phone))
        {
            var item = svc.GetItemByPhone(Phone);
            if (item != null)
            {
                var pass = enc.Decrypt(item.Password);

                await SmsService.SendSms($"[Portal-UB] -> Password Anda adalah {pass}", item.Phone);
                toastService.ShowSuccess("Info password sudah di kirim ke hp Anda");
                IsSuccess = true;

            }
            else
            {
                toastService.ShowError("No HP tidak terdaftar.");
            }
        }

    }
}
