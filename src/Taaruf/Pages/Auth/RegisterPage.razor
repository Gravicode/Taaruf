@page "/register"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@using Taaruf.Tools

<TitleBarPage MenuName="Register"></TitleBarPage>


<!-- Page Content
================================================== -->
<div class="container">
    <div class="row">
        <div class="col-xl-5 offset-xl-3">

            <div class="login-register-page">
                <!-- Welcome Text -->
                <div class="welcome-text">
                    <h3 style="font-size: 26px;">Let's create your account!</h3>
                    <span>Already have an account? <a href="/auth/login">Log In!</a></span>
                </div>

             

                <!-- Form -->
                <div id="register-account-form">
                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-mail-outline"></i>
                        <input type="email" class="input-text with-border" @bind="DataUser.Email" name="emailaddress-register" id="emailaddress-register" placeholder="Email Address" required />
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-people-outline"></i>
                        <input type="text" class="input-text with-border" @bind="DataUser.FirstName" name="firstname-register" id="firstname-register" placeholder="First Name" required />
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-people-outline"></i>
                        <input type="text" class="input-text with-border" @bind="DataUser.LastName" name="lastname-register" id="lastname-register" placeholder="Last Name" required />
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-people-outline"></i>
                        <input type="tel" class="input-text with-border" @bind="DataUser.Phone" name="phone-register" id="phone-register" placeholder="Phone" required />
                    </div>


                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-people-outline"></i>
                        <input type="text" class="input-text with-border" @bind="DataUser.Alamat" name="address-register" id="address-register" placeholder="Address" required />
                    </div>

                    <div class="input-with-icon-left" title="Should be at least 8 characters long" data-tippy-placement="bottom">
                        <i class="icon-material-outline-lock"></i>
                        <input type="password" class="input-text with-border" @bind="DataUser.Password" name="password-register" id="password-register" placeholder="Password" required />
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-outline-lock"></i>
                        <input type="password" class="input-text with-border" @bind="RetypePass" name="password-repeat-register" id="password-repeat-register" placeholder="Repeat Password" required />
                    </div>

                    <div class="input-with-icon-left">
                        <img src="@CaptchaImage" style="text-align:center;margin-bottom:5px;mr-1;mb-1">
                        <button @onclick="GenerateCaptcha" class="btn btn-success mb-1">Change</button>
                    </div>

                    <div class="input-with-icon-left">
                        <i class="icon-material-baseline-people-outline"></i>
                        <input type="text" @bind="TypedCaptcha" class="input-text with-border" name="captcha-register" id="captcha-register" placeholder="Type Captcha" required />
                    </div>
                </div>

                <!-- Button -->
                <button class="button full-width button-sliding-icon ripple-effect margin-top-10" type="button" @onclick="DaftarUser" form="login-form">Register <i class="icon-material-outline-arrow-right-alt"></i></button>

                <!-- Social Login -->
                <div class="social-login-separator"><span>or</span></div>
                <div class="social-login-buttons">
                    <button @onclick="NotAvailable" class="facebook-login ripple-effect"><i class="icon-brand-facebook-f"></i> Register via Facebook</button>
                    <button @onclick="NotAvailable" class="google-login ripple-effect"><i class="icon-brand-google-plus-g"></i> Register via Google+</button>
                </div>
            </div>

        </div>
    </div>
</div>


<!-- Spacer -->
<div class="margin-top-70"></div>
<!-- Spacer / End-->
@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }

    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string KodePengurus;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void NotAvailable()
    {
        toastService.ShowWarning("Feature is not available yet");
    }

   

    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        var temp = CaptchaGenerator.GetCaptcha(Answer, 158, 70);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }
   
    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();
    }
    async Task DaftarUser()
    {
        bool isPengurus = false;
        ErrorMsg = "";
        UserProfileService svc = new UserProfileService();
        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg += "Tolong isi Captcha. ";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg += "Captcha tidak valid. ";
        }
        if (string.IsNullOrEmpty(DataUser.Email))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!Taaruf.Tools.FormValidation.IsValidEmail(DataUser.Email))
        {
            ErrorMsg += "Format email tidak valid. ";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FirstName))
        {
            ErrorMsg += "Tolong di isi nama depan. ";

        }
        if (string.IsNullOrEmpty(DataUser.LastName))
        {
            ErrorMsg += "Tolong di isi nama belakang. ";

        }
        if (string.IsNullOrEmpty(DataUser.Alamat))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }

        DataUser.Username = DataUser.Email;

        if (svc.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }


        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }
        var enc = new Encryption();
        DataUser.FullName = $"{DataUser.FirstName} {DataUser.LastName}";


        DataUser.Role = isPengurus ? Roles.Pengurus : Roles.User;
        DataUser.Password = enc.Encrypt(DataUser.Password);
        DataUser.CreatedDate = DateHelper.GetLocalTimeNow();
        if (svc.InsertData(DataUser))
        {
            var msg = "Anda telah terdaftar di Taaruf, nuhun";
            await SmsService.SendSms(msg, DataUser.Phone);
            await MailService.PostmarkSendEmail("Telah Teregister di Taaruf", msg, DataUser.Email);
            RegisterSuccess = true;
            toastService.ShowSuccess("User berhasil di daftarkan.", "Info");
            NavMgr.NavigateTo("/login");

        }
    }
}
